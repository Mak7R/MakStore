name: makstore

services:
  # Databases
  main_db:
    image: postgres
    container_name: main_db.makstore
    environment:
      POSTGRES_USER: rootuser
      POSTGRES_PASSWORD: DbPass20190502
    ports:
      - "9003:5432"
    volumes:
      - main_db_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - makstore_net
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq.makstore
    ports:
      - "9007:5672"
      - "9008:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rootuser
      RABBITMQ_DEFAULT_PASS: DbPass20190502
    networks:
      - makstore_net
  
  # Microservices  
  auth_service:
    container_name: auth_service.makstore
    build:
      context: .
      dockerfile: src/MakStore.Microservices/AuthService/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=main_db.makstore;Username=rootuser;Password=DbPass20190502;Database=users_db
      - ConnectionStrings__IdentityServerDb=Host=main_db.makstore;Username=rootuser;Password=DbPass20190502;Database=identity_server_cfg_db
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=sslpassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/hostdockerinternal.pfx
    volumes:
      - ./DataProtection-Keys:/DataProtection-Keys
      - ./https:/https
    ports:
      - "9010:80"
      - "9011:443"
    depends_on:
      - main_db
    networks:
      - makstore_net
  
  products_service:
    container_name: products_service.makstore
    build:
      context: .
      dockerfile: src/MakStore.Microservices/ProductsService/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=main_db.makstore;Username=rootuser;Password=DbPass20190502;Database=products_db
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./DataProtection-Keys:/DataProtection-Keys
    ports:
      - "9005:8080"
    depends_on:
      - main_db
    networks:
      - makstore_net
  
  orders_service:
    container_name: orders_service.makstore
    build:
      context: .
      dockerfile: src/MakStore.Microservices/OrdersService/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=main_db.makstore;Username=rootuser;Password=DbPass20190502;Database=orders_db
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./DataProtection-Keys:/DataProtection-Keys
    ports:
      - "9006:8080"
    depends_on:
      - main_db
    networks:
      - makstore_net
  
  notifications_service:
    container_name: notifications_service.makstore
    build:
      context: .
      dockerfile: src/MakStore.Microservices/NotificationsService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./DataProtection-Keys:/DataProtection-Keys
    ports:
      - "9009:8080"
    depends_on:
      - rabbitmq
    networks:
      - makstore_net
  
  # Client Apps
  employeewebclient:
    container_name: employeewebclient.makstore
    build:
      context: .
      dockerfile: src/MakStore.ClientApps/EmployeeWebClient/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./DataProtection-Keys:/DataProtection-Keys
    ports:
      - "9002:8080"
    depends_on:
      - auth_service
    networks:
      - makstore_net
  
  nextjs:
    container_name: next.makstore
    build:
      context: src/MakStore.ClientApps/makstore
      dockerfile: Dockerfile
    ports:
      - "9001:3000"
    environment:
      - NODE_ENV=production
    depends_on:
        - auth_service
    networks:
      - makstore_net
  
  # Api Gateway
  api-gateway:
    image: nginx
    container_name: api-gateway.makstore
    ports:
      - "9000:80"
      - "9004:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - nextjs
      - employeewebclient
    networks:
      - makstore_net

networks:
  makstore_net:
    driver: bridge
    
volumes:
  main_db_data: